# Generated by Django 4.0.8 on 2022-11-06 23:18

from django.db import migrations

def reparair_rol_organization(apps, schema_editor):
    OrganizationUserManagement = apps.get_model('laboratory', 'OrganizationUserManagement')
    OrganizationStructure = apps.get_model('laboratory', 'OrganizationStructure')
    User = apps.get_model('auth', 'User')
    Profile = apps.get_model('auth_and_perms', 'Profile')
    ProfilePermission = apps.get_model('auth_and_perms', 'ProfilePermission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    for user in User.objects.filter(profile__isnull=True):
        Profile.objects.create(user=user, phone_number='5068888888',
                               id_card='0000000', job_position='')

    for org in OrganizationStructure.objects.all():
        query = OrganizationUserManagement.objects.filter(organization=org)
        if query.count() > 1:
            base = query[0]
            query = query.exclude(pk=base.pk)
            for q in query:
                for user in q.users.all():
                    base.users.add(user)
            print(query.delete())
    for profile in Profile.objects.all():
        for pp in ProfilePermission.objects.filter(profile=profile):
            if pp.content_type.model == 'laboratory':
                oum = OrganizationUserManagement.objects.filter(
                    organization=pp.content_object.organization,
                    users=profile.user
                )
                if not oum.exists():
                    print(pp.content_object.organization, pp.content_object.organization.pk)
                    org, created = OrganizationUserManagement.objects.get_or_create(
                        organization=pp.content_object.organization)
                    org.users.add(profile.user)
            ProfilePermission.objects.get_or_create(
                profile=profile,
                content_type=ContentType.objects.filter(
                    app_label=profile._meta.app_label,
                    model=profile._meta.model_name).first(),
                object_id=profile.pk)


class Migration(migrations.Migration):

    dependencies = [
        ('laboratory', '0056_remove_organizationusermanagement_group'),
    ]

    operations = [


    ]
