{"version":3,"file":"ext-text.js","sources":["../../../../src/editor/extensions/ext-text/ext-text.js"],"sourcesContent":["const name = 'textcodes'\nexport default {\n  name,\n  async init ({ _importLocale }) {\n    const svgEditor = this\n    const { svgCanvas } = svgEditor\n    //const { $id, $click } = svgCanvas\n    const modeId = 'tool_textcodes'\n\n    return {\n           name: svgEditor.i18next.t(`${name}:name`),\n           callback () {\n\n            const elements= document.querySelectorAll('.text_content')\n            for (var i = 0; i < elements.length; i++) {\n\n            elements[i].addEventListener('click',(e)=>{\n              let content=e.target.textContent\n              const curStyle = svgCanvas.getStyle()  \n              const curShape = svgCanvas.addSVGElementsFromJson({\n                  element: 'text',\n                  curStyles: true,\n                  attr: {\n                    x:100,\n                    y:100,\n                    id: svgCanvas.getNextId(),\n                    fill: svgCanvas.getCurText('fill'),\n                    'stroke-width': svgCanvas.getCurText('stroke_width'),\n                    'font-size': svgCanvas.getCurText('font_size'),\n                    'font-family': svgCanvas.getCurText('font_family'),\n                    'text-anchor': 'middle',\n                    'xml:space': 'preserve',\n                    opacity: curStyle.opacity\n                  }\n              })\n            curShape.textContent = content\n            svgCanvas.setSelectedElements(0, curShape)  \n          \n            })\n          }\n        },\n              mouseDown (opts) {\n             // Check the mode on mouseup\n             if (svgCanvas.getMode() === 'tool_textcodes') {\n               const zoom = svgCanvas.getZoom()\n     \n               // Get the actual coordinate by dividing by the zoom value\n               const x = opts.mouse_x / zoom\n               const y = opts.mouse_y / zoom\n     \n               const text = svgEditor.i18next.t(`${name}:text`, { x, y })\n\n             }\n           },\n        }\n       }\n     }\n"],"names":["name","extText","async","_ref","svgEditor","this","svgCanvas","i18next","t","concat","callback","elements","document","querySelectorAll","i","length","addEventListener","e","content","target","textContent","curStyle","getStyle","curShape","addSVGElementsFromJson","element","curStyles","attr","x","y","id","getNextId","fill","getCurText","opacity","setSelectedElements","mouseDown","opts","getMode","zoom","getZoom","mouse_x","mouse_y"],"mappings":"AAAA,MAAMA,EAAO,YACb,IAAeC,EAAA,CACbD,KAAAA,EACAE,WAA+BC,GAC7B,MAAMC,EAAYC,MACZC,UAAEA,GAAcF,EAItB,MAAO,CACAJ,KAAMI,EAAUG,QAAQC,EAAlB,GAAAC,OAAuBT,EAD7B,UAEAU,WAEC,MAAMC,EAAUC,SAASC,iBAAiB,iBAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAErCH,EAASG,GAAGE,iBAAiB,SAASC,IACpC,IAAIC,EAAQD,EAAEE,OAAOC,YACrB,MAAMC,EAAWf,EAAUgB,WACrBC,EAAWjB,EAAUkB,uBAAuB,CAC9CC,QAAS,OACTC,WAAW,EACXC,KAAM,CACJC,EAAE,IACFC,EAAE,IACFC,GAAIxB,EAAUyB,YACdC,KAAM1B,EAAU2B,WAAW,QAC3B,eAAgB3B,EAAU2B,WAAW,gBACrC,YAAa3B,EAAU2B,WAAW,aAClC,cAAe3B,EAAU2B,WAAW,eACpC,cAAe,SACf,YAAa,WACbC,QAASb,EAASa,WAG1BX,EAASH,YAAcF,EACvBZ,EAAU6B,oBAAoB,EAAGZ,OAK/Ba,UAAWC,GAEZ,GAA4B,mBAAxB/B,EAAUgC,UAAgC,CAC5C,MAAMC,EAAOjC,EAAUkC,UAGjBZ,EAAIS,EAAKI,QAAUF,EACnBV,EAAIQ,EAAKK,QAAUH,EAEZnC,EAAUG,QAAQC,EAAKR,GAAAA,OAAAA,EAAa,SAAA,CAAE4B,EAAAA,EAAGC,EAAAA"}